var request = require('request');
var Promise = require('bluebird');
var _ = require('lodash');

var internals = {};

internals.__getData = function (url) {
    return new Promise( function (resolve, reject) {
        if (!url) {
            resolve({});
        } else {
            request({
                method: 'GET',
                url: url,
                json: true
            }, function (err, res, body) {
                if (err) resolve({});
                if (res.statusCode !== 200) resolve({});
                resolve(body);
            });
        }
    });
};

function Hotwire(options){
    this.__data__ = {};
    this.defaults = {
        url : '',
        config : {}
    };
    this.options = _.assign({}, this.defaults, options);
}

Hotwire.prototype.get = function (key) {
    var data = this.__data__;
    if (key) {
        data = _.result(this.__data__, key);
    }
    return data;
};

Hotwire.prototype.refresh = function () {
    var self = this;
    return internals.__getData(self.options.url)
        .then(function (data) {
            self.__data__ = _.merge({}, data, self.options.config);
            return self.__data__;
        });
};

Hotwire.prototype.init = Hotwire.prototype.refresh;

module.exports = Hotwire;
